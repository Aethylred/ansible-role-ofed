---
# tasks file for ofed

- name: Install the repository
  command: yum-config-manager --add-repo {{ ofed_repo_file }}
  args:
    creates: /etc/yum.repos.d/{{ ofed_repo_name }}
  become: true
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version < '8'

- name: Install the repository
  command: dnf config-manager --add-repo {{ ofed_repo_file }}
  args:
    creates: /etc/yum.repos.d/{{ ofed_repo_name }}
  become: true
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version >= '8'

- name: Install the GPG key
  rpm_key:
    key: http://www.mellanox.com/downloads/ofed/RPM-GPG-KEY-Mellanox
  become: true

- name: Install infiniband support
  yum:
    name: "@Infiniband Support"
    state: present
    nobest: "{{ ofed_nobest | bool }}"
  become: true
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version < '8'

- name: Install infiniband support
  dnf:
    name: "@Infiniband Support"
    state: present
    nobest: "{{ ofed_nobest }}"
  become: true
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version >= '8'

- name: Determine which kernel version is supported
  # Produces: 3.10.0-1127.el7.x86_64
  shell: |-
    set -o pipefail
    rpm -ql kmod-mlnx-ofa_kernel | grep "/lib/modules" | awk -F "/" '{print $4}' | uniq
  args:
    executable: /bin/bash
  register: supported_kernel
  changed_when: false

- name: Install supported kernel
  package:
    name: "kernel-{{ supported_kernel.stdout }}"
  become: true
  when: ofed_update_kernel | bool

- name: Make grub default to supported kernel
  # NOTE: This affects config generation so put it before
  command: grub2-set-default '{{ ansible_distribution }} Linux ({{ supported_kernel.stdout }}) {{ ansible_distribution_major_version }} (Core)'
  changed_when: false
  become: true
  when: ofed_update_kernel | bool

- name: Generate new grub-config
  command: grub2-mkconfig
  register: grub_mkconfig_result
  become: true
  changed_when: false
  when: ofed_update_kernel | bool

- name: Replace current grub config
  copy:
    # This fails if a file doesn't exist to be backed up so set ofed_grub_backup to false
    backup: "{{ ofed_grub_backup }}"
    # /etc/grub2.cfg -> ../boot/grub2/grub.cfg
    follow: true
    content: "{{ grub_mkconfig_result.stdout }}"
    dest: "{{ item }}"
  become: true
  when: ofed_update_kernel | bool
  register: grub_update_result
  with_items:
    - /etc/grub2.cfg
    - /etc/grub2-efi.cfg
